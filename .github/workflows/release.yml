name: Release

on:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:

  workflow-setup:
    runs-on: ubuntu-latest
    outputs:
      GITHUB_REPOSITORY_NAME: ${{ steps.cache.outputs.GITHUB_REPOSITORY_NAME }}
      VERSION: ${{ steps.cache.outputs.VERSION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Set outputs
        id: cache
        run: |
          echo "::set-output name=GITHUB_REPOSITORY_NAME::$(echo ${GITHUB_REPOSITORY,,})"
          echo "::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}"


  build-image:
    # Reference to workflow-setup job is required to access its various outputs.
    needs: workflow-setup
    runs-on: ubuntu-latest
    env:
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      VERSION: ${{ needs.workflow-setup.outputs.VERSION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: build and push image
        run: |
          echo ${{ secrets.GH_PAT }} | docker login ghcr.io --username ${{ secrets.GH_USER }} --password-stdin
          docker build -f .github/workflows/build/Dockerfile --no-cache -t ${{ env.GITHUB_REPOSITORY_NAME }}/node-build:${{ env.VERSION }} .
          docker tag ${{ env.GITHUB_REPOSITORY_NAME }}/node-build:${{ env.VERSION }} ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/node-build:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/node-build:${{ env.VERSION }}

  tagged-release:
    name: "Tagged Release"
    needs: workflow-setup
    runs-on: "ubuntu-latest"

    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
      id: go

    - name: Download and build starport
      run: curl https://get.starport.network/starport | bash

    - run: sudo mv starport /usr/local/bin/

    - name: Starport build
      run: starport build

    - name: Make archive
      run: |
        touch node_${{ needs.workflow-setup.outputs.VERSION }}.tar.gz
        tar -czf node_${{ needs.workflow-setup.outputs.VERSION }}.tar.gz --exclude=node_${{ needs.workflow-setup.outputs.VERSION }}.tar.gz .
    - name: Upload archive
      uses: actions/upload-artifact@v2
      with:
        name: node_${{ needs.workflow-setup.outputs.VERSION }}.tar.gz
        path: node_${{ needs.workflow-setup.outputs.VERSION }}.tar.gz

    - run: sudo apt-get install ruby ruby-dev rubygems build-essential
    - run: sudo gem install --no-document fpm

    - name: Creating deb package
      run: sh build_deb.sh -v ${{ needs.workflow-setup.outputs.VERSION }} -t node_${{ needs.workflow-setup.outputs.VERSION }}.tar.gz

    - name: Upload deb
      uses: actions/upload-artifact@v2
      with:
        name: node_${{ needs.workflow-setup.outputs.VERSION }}-1_amd64.deb
        path: node_${{ needs.workflow-setup.outputs.VERSION }}-1_amd64.deb


    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: false
        files: |
          node_${{ needs.workflow-setup.outputs.VERSION }}.tar.gz
          node_${{ needs.workflow-setup.outputs.VERSION }}-1_amd64.deb


