name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  setup-workflow:
    name: "Setup workflow"
    runs-on: ubuntu-latest
    outputs:
      GITHUB_REPOSITORY_NAME: ${{ steps.cache.outputs.GITHUB_REPOSITORY_NAME }}
      TAG: ${{ steps.cache.outputs.TAG }}
      VERSION: ${{ steps.cache.outputs.VERSION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Set outputs
        id: cache
        run: |
          # Exposes org_name/repository_name in lower case. Required by docker.
          echo "::set-output name=GITHUB_REPOSITORY_NAME::$(echo ${GITHUB_REPOSITORY,,})"

          # Version is tag without `v` prefix. Reuired by deb package.
          TAG=${GITHUB_REF/refs\/tags\//}
          echo "::set-output name=TAG::$TAG"

          VERSION="${TAG:1}" # Remove first character
          echo "::set-output name=VERSION::$VERSION"

  build-binary:
    name: Build binary
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      # There is an issue with the latest starport, especially 0.18 version
      - name: Download and install starport
        run: wget -qO- https://github.com/tendermint/starport/releases/download/v0.18.6/starport_0.18.6_linux_amd64.tar.gz | tar xvz -C /tmp/ && sudo cp /tmp/starport /usr/bin

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # FIXME: Starport requires full repository

      - name: Build
        run: |
          starport chain build --release
          tar xzvf release/cheqd-node_linux_amd64.tar.gz

      - name: Store artifact
        uses: actions/upload-artifact@v2
        with:
          name: cheqd-noded
          path: cheqd-noded

  build-deb-package:
    name: Build deb package
    runs-on: ubuntu-20.04
    needs: [ build-binary, setup-workflow ]
    env:
      PACKAGE_NAME: "cheqd-node"
      VERSION: ${{ needs.setup-workflow.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2

      - name: Load binary artifact
        uses: actions/download-artifact@v2
        with:
          name: cheqd-noded
          path: /home/runner/go/bin

      - name: Restore binary permissions
        run: sudo chmod +x /home/runner/go/bin/cheqd-noded

      - name: Make intermediate archive
        working-directory: ./build_tools
        run: |
          ./build_tar.sh ${{ env.PACKAGE_NAME }} ${{ env.VERSION }}

      - name: Install fpm
        run: |
          sudo apt-get install ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm

      - name: Build deb # Depends on tar archive
        run: |
          ./build_deb.sh ${{ env.PACKAGE_NAME }} ${{ env.VERSION }}
        working-directory: ./build_tools

      - name: Store deb package artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb
          path: build_tools/output/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb

  build-node-image:
    name: Build cheqd-node image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # FIXME: Starport requires full repository

      - name: Build
        run: docker build -f docker/cheqd_node/Dockerfile --no-cache -t cheqd-node  --build-arg UID=$(id -u) --build-arg GID=$(id -g) . # TODO: Get rid of UID and GID

      - name: Save
        run: docker save -o cheqd-node-image.tar cheqd-node

      - name: Store artifact
        uses: actions/upload-artifact@v2
        with:
          name: cheqd-node-image.tar
          path: cheqd-node-image.tar

  build-testnet-image:
    name: Build cheqd-testnet image
    runs-on: ubuntu-20.04
    needs: build-node-image
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Download node image
        uses: actions/download-artifact@v2
        with:
          name: cheqd-node-image.tar

      - name: Load node image
        run: docker load -i cheqd-node-image.tar

      - name: Build
        run: docker build -f docker/single_image_testnet/Dockerfile --no-cache -t cheqd-testnet .

      - name: Save
        run: docker save -o cheqd-testnet-image.tar cheqd-testnet

      - name: Store artifact
        uses: actions/upload-artifact@v2
        with:
          name: cheqd-testnet-image.tar
          path: cheqd-testnet-image.tar

  publish:
    name: "Publish docker images"
    # Reference to workflow-setup job is required to access its various outputs.
    needs: [ setup-workflow, build-node-image, build-testnet-image, build-deb-package ]
    runs-on: ubuntu-latest
    env:
      GITHUB_REPOSITORY_NAME: ${{ needs.setup-workflow.outputs.GITHUB_REPOSITORY_NAME }}
      TAG: ${{ needs.setup-workflow.outputs.TAG }}
      VERSION: ${{ needs.setup-workflow.outputs.VERSION }}
      PACKAGE_NAME: "cheqd-node"
      TESTNET_IMAGE_NAME: "cheqd-testnet"
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Download node image
        uses: actions/download-artifact@v2
        with:
          name: cheqd-node-image.tar

      - name: Load node image
        run: docker load -i cheqd-node-image.tar

      - name: Download testnet image
        uses: actions/download-artifact@v2
        with:
          name: cheqd-testnet-image.tar

      - name: Load testnet image
        run: docker load -i cheqd-testnet-image.tar

      - name: Login to docker
        run: |
          echo ${{ secrets.GH_PAT }} | docker login ghcr.io --username ${{ secrets.GH_USER }} --password-stdin

      - name: Push node image
        run: |
          docker tag cheqd-node ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}:${{ env.VERSION }}
          docker tag cheqd-node ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}:latest
          docker push ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}:latest

      - name: Push testnet image
        run: |
          docker tag cheqd-testnet ghcr.io/${{ github.repository_owner }}/${{ env.TESTNET_IMAGE_NAME }}:${{ env.VERSION }}
          docker tag cheqd-testnet ghcr.io/${{ github.repository_owner }}/${{ env.TESTNET_IMAGE_NAME }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.TESTNET_IMAGE_NAME }}:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.TESTNET_IMAGE_NAME }}:latest

      - name: Download deb
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb

      - name: Load binary artifact
        uses: actions/download-artifact@v2
        with:
          name: cheqd-noded

      - name: Restore binary permissions
        run: sudo chmod +x cheqd-noded

      - name: Make tar archive
        run: tar -zcvf ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz cheqd-noded

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.TAG }}"
          prerelease: true
        files: |
          build_tools/output/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb
          build_tools/output/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz
