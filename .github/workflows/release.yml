name: Release

on: push

jobs:
  setup-workflow:
    name: "Setup workflow"
    runs-on: ubuntu-latest
    outputs:
      GITHUB_REPOSITORY_NAME: ${{ steps.cache.outputs.GITHUB_REPOSITORY_NAME }}
      VERSION: ${{ steps.cache.outputs.VERSION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Set outputs
        id: cache
        run: |
          # Exposes org_name/repository_name in lower case. Required by docker.
          echo "::set-output name=GITHUB_REPOSITORY_NAME::$(echo ${GITHUB_REPOSITORY,,})"
          echo "::set-output name=VERSION::1.2.3"

  publish-release:
    name: "Publish release"
    needs: setup-workflow
    runs-on: "ubuntu-latest"
    env:
      GITHUB_REPOSITORY_NAME: ${{ needs.setup-workflow.outputs.GITHUB_REPOSITORY_NAME }}
      VERSION: ${{ needs.setup-workflow.outputs.VERSION }}
      OUTPUT_DIR: "output"
      PACKAGE_NAME: "cheqd-node"
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install starport
        run: curl https://get.starport.network/starport! | sudo bash

      - name: Git checkout
        uses: actions/checkout@v2

      - name: Build
        run: starport chain build

      - name: Make archive
        run: |
          build_tar.sh ${{ env.PACKAGE_NAME }} ${{ env.VERSION }} 
        working-directory: ./build_tools

      - name: Upload archive
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz
          path: build_tools/${{ env.OUTPUT_DIR }}/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz

      - name: Install fpm
        run: |
          sudo apt-get install ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm

      - name: Changing version for deb packaging
        run: |
          echo "VERSION=$(echo ${{ env.VERSION }} | sed 's/v//')" >> $GITHUB_ENV

      - name: Create deb package
        run: |
          build_deb.sh ${{ env.PACKAGE_NAME }} ${{ env.VERSION }}
        working-directory: ./build_tools

      - name: Upload deb
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb
          path: build_tools/${{ env.OUTPUT_DIR }}/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb

