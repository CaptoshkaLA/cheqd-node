name: Release

on:
  push:
    branches:
      - main
      - amromashov/verim-poc
    tags:
      - "v*"

jobs:

  workflow-setup:
    runs-on: ubuntu-latest
    outputs:
      GITHUB_REPOSITORY_NAME: ${{ steps.cache.outputs.GITHUB_REPOSITORY_NAME }}
      VERSION: ${{ steps.cache.outputs.VERSION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Set outputs
        id: cache
        run: |
          # Exposes org_name/repository_name in lower case. Required by docker.
          echo "::set-output name=GITHUB_REPOSITORY_NAME::$(echo ${GITHUB_REPOSITORY,,})"
          echo "::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}"


  build-image:
    # Reference to workflow-setup job is required to access its various outputs.
    needs: workflow-setup
    runs-on: ubuntu-latest
    env:
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      VERSION: ${{ needs.workflow-setup.outputs.VERSION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: build and push image
        run: |
          echo ${{ secrets.GH_PAT }} | docker login ghcr.io --username ${{ secrets.GH_USER }} --password-stdin
          docker build -f ci/docker/Dockerfile --no-cache -t verim-node .
          docker tag verim-node ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}:${{ env.VERSION }}
          docker tag verim-node ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}:latest
          docker push ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}:${{ env.VERSION }}
          docker push ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}:latest

  tagged-release:
    name: "Tagged Release"
    needs: workflow-setup
    runs-on: "ubuntu-latest"
    env:
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      VERSION: ${{ needs.workflow-setup.outputs.VERSION }}
      OUTPUT_DIR: "output"
      PACKAGE_NAME: "verim-node"
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Install starport
      run: curl https://get.starport.network/starport! | sudo bash

    - name: Git checkout
      uses: actions/checkout@v2

    - name: Build
      run: starport build

    - name: Create artifacts directory
      run: mkdir ${{ env.OUTPUT_DIR }}
      
    - name: Make archive
      run: |
        touch ${{ env.OUTPUT_DIR }}/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz
        tar -czf ${{ env.OUTPUT_DIR }}/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz /home/runner/go/bin/verim-noded

    - name: Upload archive
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz
        path: ${{ env.OUTPUT_DIR }}/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz

    - name: Install fpm
      run: |
        sudo apt-get install ruby ruby-dev rubygems build-essential
        sudo gem install --no-document fpm

    - name: Create deb package
      run: |
        fpm \
          --input-type "tar" \
          --output-type "deb" \
          --version ${{ env.VERSION }} \
          --name verim-node \
          --description "verim node" \
          --architecture "amd64" \
          --verbose \
          --package ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb \
          ${{ env.OUTPUT_DIR }}/${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz

    - name: Upload deb
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb
        path: ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb


    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: false
        files: |
          ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}_amd64.deb
          ${{ env.PACKAGE_NAME }}_${{ env.VERSION }}.tar.gz


