syntax = "proto3";
package cheqdid.cheqdnode.resource.v1;

option go_package = "github.com/cheqd/cheqd-node/x/resource/types";

import "google/api/annotations.proto";
import "resource/v1/resource.proto";


// Query defines the gRPC querier service.
service Query {
	rpc Resource(QueryGetResourceRequest) returns (QueryGetResourceResponse) {
		option (google.api.http).get = "/1.0/identifiers/{did}/resources/{id}";
	}
	rpc CollectionResources(QueryGetCollectionResourcesRequest) returns (QueryGetCollectionResourcesResponse) {
		option (google.api.http).get = "/1.0/identifiers/{did}/resources";
	}
	rpc AllResourceVersions(QueryGetAllResourceVersionsRequest) returns (QueryGetAllResourceVersionsResponse) {
		option (google.api.http).get = "/1.0/identifiers/{did}/resources";
	}
}

message QueryGetResourceRequest {
	string collection_id = 1;
	string id = 2;
}

message QueryGetResourceResponse {
	Resource resource = 1;
}

message QueryGetCollectionResourcesRequest {
	string collection_id = 1;
}

message QueryGetCollectionResourcesResponse {
	repeated Resource resource = 1;
}

message QueryGetAllResourceVersionsRequest {
	string collection_id = 1;
    string name = 2;
    string resource_type = 3;
    string mime_type = 4;
}

message QueryGetAllResourceVersionsResponse {
	repeated Resource resource = 1;
}
