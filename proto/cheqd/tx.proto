syntax = "proto3";
package cheqdid.cheqdnode.cheqd;
import "google/protobuf/any.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/cheqd/cheqd-node/x/cheqd/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateCredDef(WriteRequest) returns (MsgCreateCredDefResponse);
  rpc CreateSchema(WriteRequest) returns (MsgCreateSchemaResponse);
  rpc CreateAttrib(WriteRequest) returns (MsgCreateAttribResponse);
  rpc UpdateAttrib(WriteRequest) returns (MsgUpdateAttribResponse);
  rpc CreateDid(WriteRequest) returns (MsgCreateDidResponse);
  rpc UpdateDid(WriteRequest) returns (MsgUpdateDidResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message WriteRequest {
  google.protobuf.Any data = 1;
  string author = 2;
  string signature = 3;

}

message MsgCreateCredDef {
  string schema_id = 1;
  string tag = 2;
  string signature_type = 3;
  string value = 4;
}

message MsgCreateCredDefResponse {
  string id = 1;
}

message MsgCreateSchema {
  string name = 1;
  string version = 2;
  string attr_names = 3;
}

message MsgCreateSchemaResponse {
  string id = 1;
}

message MsgCreateAttrib {
  string did = 1;
  string raw = 2;
}

message MsgCreateAttribResponse {
  string id = 1;
}

message MsgUpdateAttrib {
  string did = 1;
  string raw = 2;
}

message MsgUpdateAttribResponse {
  string id = 1;
}

message MsgCreateDid {
  string id = 1;
  string verkey = 2;
  string alias = 3;
}

message MsgCreateDidResponse {
  string id = 1;
}

message MsgUpdateDid {
  string id = 1;
  string verkey = 2;
  string alias = 3;
}

message MsgUpdateDidResponse {
  string id = 1;
}
